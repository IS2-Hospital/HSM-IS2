/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package viewer.doctor;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import control.Controller;
import launcher.Main;
import model.Patient;

/**
 *
 * @author reven
 */
@SuppressWarnings("serial")
public class MyPatientsPanel extends javax.swing.JPanel {

	private static MyPatientsPanel instance = null;

	private Controller ctrl;
	private DoctorPanel doctorPanel;

	private MyPatientsTableModel tableModel;

	/**
	 * Creates new form MyPatientsPanel
	 */
	private MyPatientsPanel(Controller ctrl, String doctor_dni, DoctorPanel doctorPanel) {
		this.ctrl = ctrl;
		this.tableModel = new MyPatientsTableModel(ctrl, doctor_dni);
		this.doctorPanel = doctorPanel;

		initComponents();
	}

	// Singleton
	public static MyPatientsPanel getInstance(Controller ctrl, String doctor_dni, DoctorPanel doctorPanel) {
		if (instance == null)
			instance = new MyPatientsPanel(ctrl, doctor_dni, doctorPanel);
		instance.open();

		return instance;
	}

	private void open() {
		try {
			tableModel.open();
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), e.getMessage(), "", JOptionPane.ERROR_MESSAGE);

			if (Main.SHOW_EXCEPTIONS_TRACE)
				e.printStackTrace();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		topPanel = new javax.swing.JPanel();
		titleLabel = new javax.swing.JLabel();
		patientsTableScroll = new javax.swing.JScrollPane();
		patientsTable = new javax.swing.JTable(tableModel);
		bottomPanel = new javax.swing.JPanel();
		viewMedicHistoryButton = new misc.RSButtonMetro();
		addTreatmentButton = new misc.RSButtonMetro();
		viewTreatmentsButton = new misc.RSButtonMetro();

		setLayout(new java.awt.BorderLayout());

		titleLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		titleLabel.setForeground(new java.awt.Color(51, 51, 51));
		titleLabel.setText("My Patients");
		topPanel.add(titleLabel);

		add(topPanel, java.awt.BorderLayout.PAGE_START);

		patientsTableScroll.setViewportView(patientsTable);
		add(patientsTableScroll, java.awt.BorderLayout.CENTER);

		viewMedicHistoryButton.setText("View medic history");
		viewMedicHistoryButton.setColorHover(new java.awt.Color(138, 202, 234));
		viewMedicHistoryButton.setColorNormal(new java.awt.Color(8, 72, 135));
		viewMedicHistoryButton.setColorPressed(new java.awt.Color(8, 72, 135));
		viewMedicHistoryButton.setColorTextHover(new java.awt.Color(51, 51, 51));
		viewMedicHistoryButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				viewMedicHistoryButtonActionPerformed(e);
			}
		});

		bottomPanel.add(viewMedicHistoryButton);

		addTreatmentButton.setText("Add Treatment");
		addTreatmentButton.setColorHover(new java.awt.Color(138, 202, 234));
		addTreatmentButton.setColorNormal(new java.awt.Color(8, 72, 135));
		addTreatmentButton.setColorPressed(new java.awt.Color(8, 72, 135));
		addTreatmentButton.setColorTextHover(new java.awt.Color(51, 51, 51));
		addTreatmentButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				addTreatmentButtonActionPerformed(e);
			}
		});

		bottomPanel.add(addTreatmentButton);

		viewTreatmentsButton.setText("View treatments");
		viewTreatmentsButton.setColorHover(new java.awt.Color(138, 202, 234));
		viewTreatmentsButton.setColorNormal(new java.awt.Color(8, 72, 135));
		viewTreatmentsButton.setColorPressed(new java.awt.Color(8, 72, 135));
		viewTreatmentsButton.setColorTextHover(new java.awt.Color(51, 51, 51));
		viewTreatmentsButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				viewTreatmentsButtonActionPerformed(e);
			}
		});

		bottomPanel.add(viewTreatmentsButton);

		add(bottomPanel, java.awt.BorderLayout.PAGE_END);
	}// </editor-fold>

	private void viewMedicHistoryButtonActionPerformed(ActionEvent e) {
		try {
			Patient p = tableModel.getSelectedPatient(patientsTable.getSelectedRow());
			DoctorTreatmentWindow.getInstance(ctrl, p.getDni(), SwingUtilities.getWindowAncestor(this)).setVisible(true);

		} catch (IndexOutOfBoundsException e1) { // no row selected
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), "You have to select a patient", "", JOptionPane.ERROR_MESSAGE);
		}
	}

	private void addTreatmentButtonActionPerformed(ActionEvent e) {
		if (patientsTable.getSelectedRow() == -1) { // no row selected
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), "You have to select a patient", "", JOptionPane.ERROR_MESSAGE);
		}
		else {
			AddTreatmentDialog atd = new AddTreatmentDialog(
					ctrl,
					tableModel.getSelectedPatient(patientsTable.getSelectedRow()),
					this);
			atd.setVisible(true);
		}
	}

	private void viewTreatmentsButtonActionPerformed(ActionEvent e) {
		try {
			Patient p = tableModel.getSelectedPatient(patientsTable.getSelectedRow());
			TreatmentsDialog d = new TreatmentsDialog(ctrl, p.getDni(), SwingUtilities.getWindowAncestor(this));

		} catch (IndexOutOfBoundsException e1) { // no row selected
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), "You have to select a patient", "", JOptionPane.ERROR_MESSAGE);
		}
	}


	// Variables declaration - do not modify
	private javax.swing.JPanel bottomPanel;
	private javax.swing.JTable patientsTable;
	private javax.swing.JScrollPane patientsTableScroll;
	private javax.swing.JLabel titleLabel;
	private javax.swing.JPanel topPanel;
	private misc.RSButtonMetro viewMedicHistoryButton;
	private misc.RSButtonMetro addTreatmentButton;
	private misc.RSButtonMetro viewTreatmentsButton;
	// End of variables declaration

}
