/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package viewer.admin;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import control.Controller;
import launcher.Main;
import model.DoctorChangeRequest;

/**
 *
 * @author reven
 */
@SuppressWarnings("serial")
public class DoctorChangeRequestAproverPanel extends javax.swing.JPanel {

	private static DoctorChangeRequestAproverPanel instance = null;

	private Controller ctrl;
	private DoctorChangeRequestTableModel tableModel;

	/**
	 * Creates new form DoctorChangeRequestAproverPanel
	 */
	private DoctorChangeRequestAproverPanel(Controller ctrl) {
		this.ctrl = ctrl;
		tableModel = new DoctorChangeRequestTableModel(ctrl);

		initComponents();
	}

	public static DoctorChangeRequestAproverPanel getInstance(Controller ctrl) {
		if (instance == null)
			instance = new DoctorChangeRequestAproverPanel(ctrl);
		instance.open();

		return instance;
	}

	private void open() {
		try {
			tableModel.open();
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);

			if (Main.SHOW_EXCEPTIONS_TRACE)
				e.printStackTrace();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		topPanel = new javax.swing.JPanel();
		titleLabel = new javax.swing.JLabel();
		centerScrollPane = new javax.swing.JScrollPane();
		requestsTable = new javax.swing.JTable();
		bottomPanel = new javax.swing.JPanel();
		denyButton = new misc.RSButtonMetro();
		aproveButton = new misc.RSButtonMetro();

		setLayout(new java.awt.BorderLayout());

		titleLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		titleLabel.setForeground(new java.awt.Color(51, 51, 51));
		titleLabel.setText("Doctor change requests");
		topPanel.add(titleLabel);

		add(topPanel, java.awt.BorderLayout.PAGE_START);

		requestsTable.setModel(tableModel);
		centerScrollPane.setViewportView(requestsTable);

		add(centerScrollPane, java.awt.BorderLayout.CENTER);

		denyButton.setText("Deny");
		denyButton.setColorHover(new java.awt.Color(138, 202, 234));
		denyButton.setColorNormal(new java.awt.Color(8, 72, 135));
		denyButton.setColorPressed(new java.awt.Color(8, 72, 135));
		denyButton.setColorTextHover(new java.awt.Color(51, 51, 51));
		denyButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				addActionListenerActionPerformed(e);
			}
		});
		bottomPanel.add(denyButton);

		aproveButton.setText("Aprove");
		aproveButton.setColorHover(new java.awt.Color(138, 202, 234));
		aproveButton.setColorNormal(new java.awt.Color(8, 72, 135));
		aproveButton.setColorPressed(new java.awt.Color(8, 72, 135));
		aproveButton.setColorTextHover(new java.awt.Color(51, 51, 51));
		aproveButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				aproveButtonActionPerformed(e);
			}
		});
		bottomPanel.add(aproveButton);

		add(bottomPanel, java.awt.BorderLayout.PAGE_END);
	}// </editor-fold>

	private void addActionListenerActionPerformed(ActionEvent e) {
		try {
			int row = requestsTable.getSelectedRow();
			DoctorChangeRequest req = tableModel.getRequest(row);

			ctrl.denyDoctorChangeRequest(req);
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), "The request was denied", "", JOptionPane.INFORMATION_MESSAGE);
			tableModel.open();

		} catch (IndexOutOfBoundsException e1) {
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), "You have to select a request", "", JOptionPane.ERROR_MESSAGE);
		} catch (SQLException e1) {
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), e1.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);

			if (Main.SHOW_EXCEPTIONS_TRACE)
				e1.printStackTrace();
		}
	}

	private void aproveButtonActionPerformed(ActionEvent e) {
		try {
			int row = requestsTable.getSelectedRow();
			DoctorChangeRequest req = tableModel.getRequest(row);

			ctrl.aceptDoctorChangeRequest(req);
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), "The request was acepted", "", JOptionPane.INFORMATION_MESSAGE);
			tableModel.open();

		} catch (IndexOutOfBoundsException e1) {
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), "You have to select a request", "", JOptionPane.ERROR_MESSAGE);
		} catch (SQLException e1) {
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), e1.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);

			if (Main.SHOW_EXCEPTIONS_TRACE)
				e1.printStackTrace();
		}
	}

	// Variables declaration - do not modify
	private javax.swing.JPanel bottomPanel;
	private javax.swing.JScrollPane centerScrollPane;
	private misc.RSButtonMetro aproveButton;
	private misc.RSButtonMetro denyButton;
	private javax.swing.JTable requestsTable;
	private javax.swing.JLabel titleLabel;
	private javax.swing.JPanel topPanel;
	// End of variables declaration
}

