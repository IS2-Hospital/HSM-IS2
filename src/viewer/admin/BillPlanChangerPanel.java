/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package viewer.admin;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.text.DecimalFormat;

import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingUtilities;

import control.Controller;
import launcher.Main;
import model.Enums.HealthInsuranceType;

/**
 *
 * @author reven
 */
@SuppressWarnings("serial")
public class BillPlanChangerPanel extends javax.swing.JPanel {

	private static BillPlanChangerPanel instance = null;

	private double min = 0.00;
	private double value = 100.00; // TODO rellenar con una consulta
	private double value2 = 100.00; // TODO rellenar con una consulta
	private double max = 1000.00;
	private double stepSize = 0.01;

	private SpinnerNumberModel model1;
	private SpinnerNumberModel model2;

	private Controller ctrl;

	/**
	 * Creates new form BillPlanChangerPanel
	 */
	private BillPlanChangerPanel(Controller ctrl) {
		this.ctrl = ctrl;

		initComponents();
	}

	// Singleton
	public static BillPlanChangerPanel getInstance(Controller ctrl) {
		if (instance == null)
			instance = new BillPlanChangerPanel(ctrl);
		instance.open();

		return instance;
	}

	private void open() {
		try {
			double[] prices = ctrl.getInsurancePrices();
			jSpinner1.setModel(new SpinnerNumberModel(prices[0], min, max, stepSize));
			jSpinner2.setModel(new SpinnerNumberModel(prices[1], min, max, stepSize));

		} catch (SQLException e) {
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), e.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);

			if (Main.SHOW_EXCEPTIONS_TRACE)
				e.printStackTrace();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		topPanel = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		centerPanel = new javax.swing.JPanel();
		centerSubPanel = new javax.swing.JPanel();
		singleLabel = new javax.swing.JLabel();
		jSpinner1 = new javax.swing.JSpinner();
		familiarLabel = new javax.swing.JLabel();
		jSpinner2 = new javax.swing.JSpinner();
		bottomPanel = new javax.swing.JPanel();
		saveButton = new misc.RSButtonMetro();

		setLayout(new java.awt.BorderLayout());

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(51, 51, 51));
		jLabel1.setText("Change bills");
		topPanel.add(jLabel1);

		add(topPanel, java.awt.BorderLayout.PAGE_START);

		centerPanel.setLayout(new java.awt.GridBagLayout());

		centerSubPanel.setLayout(new java.awt.GridLayout(2, 2, 10, 10));

		singleLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		singleLabel.setForeground(new java.awt.Color(51, 51, 51));
		singleLabel.setText("Single insurance");
		centerSubPanel.add(singleLabel);

		this.model1 = new SpinnerNumberModel(value, min, max, stepSize);
		jSpinner1.setModel(model1);

		JSpinner.NumberEditor editor = (JSpinner.NumberEditor)jSpinner1.getEditor();
		DecimalFormat format = editor.getFormat();
		format.setMinimumFractionDigits(2);


		centerSubPanel.add(jSpinner1);

		familiarLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		familiarLabel.setForeground(new java.awt.Color(51, 51, 51));
		familiarLabel.setText("Familiar insurance");
		centerSubPanel.add(familiarLabel);

		this.model2 = new SpinnerNumberModel(value2, min, max, stepSize);
		jSpinner2.setModel(model2);

		JSpinner.NumberEditor editor2 = (JSpinner.NumberEditor)jSpinner2.getEditor();
		DecimalFormat format2 = editor2.getFormat();
		format2.setMinimumFractionDigits(2);

		centerSubPanel.add(jSpinner2);

		centerPanel.add(centerSubPanel, new java.awt.GridBagConstraints());

		add(centerPanel, java.awt.BorderLayout.CENTER);

		saveButton.setText("Save");
		saveButton.setColorHover(new java.awt.Color(138, 202, 234));
		saveButton.setColorNormal(new java.awt.Color(8, 72, 135));
		saveButton.setColorPressed(new java.awt.Color(8, 72, 135));
		saveButton.setColorTextHover(new java.awt.Color(51, 51, 51));
		saveButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				addActionListenerActionPerformed(e);
			}
		});
		bottomPanel.add(saveButton);

		add(bottomPanel, java.awt.BorderLayout.PAGE_END);
	}// </editor-fold>

	private void addActionListenerActionPerformed(ActionEvent e) {
		try {
			ctrl.changeBillPlan(HealthInsuranceType.SINGLE.toString(), (double) jSpinner1.getValue());
			ctrl.changeBillPlan(HealthInsuranceType.FAMILIAR.toString(), (double) jSpinner2.getValue());
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), "Changes were saved sucessfully", "", JOptionPane.INFORMATION_MESSAGE);

		} catch (SQLException e1) {
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), e1.getMessage(), "Database error", JOptionPane.ERROR_MESSAGE);

			if (Main.SHOW_EXCEPTIONS_TRACE)
				e1.printStackTrace();
		}
	}

	// Variables declaration - do not modify
	private javax.swing.JPanel bottomPanel;
	private javax.swing.JPanel centerPanel;
	private javax.swing.JPanel centerSubPanel;
	private javax.swing.JLabel familiarLabel;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JSpinner jSpinner1;
	private javax.swing.JSpinner jSpinner2;
	private misc.RSButtonMetro saveButton;
	private javax.swing.JLabel singleLabel;
	private javax.swing.JPanel topPanel;
	// End of variables declaration
}
