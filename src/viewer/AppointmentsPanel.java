/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package viewer;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

import control.Controller;
import launcher.Main;
import model.Appointment;
import model.Enums.UserRole;

/**
 *
 * @author reven
 */
@SuppressWarnings("serial")
public class AppointmentsPanel extends javax.swing.JPanel {

	private static AppointmentsPanel instance = null;

	private Controller ctrl;
	private String dni;
	private UserRole role;
	private misc.RSButtonMetro btnCancel;
	JPanel southPanel;

	/**
	 * Creates new form AppointmentsPanel
	 * @param ctrl
	 * @param dni
	 */
	private AppointmentsPanel(Controller ctrl, String dni, UserRole role) {
		this.ctrl = ctrl;
		this.dni = dni;
		this.role = role;

		initComponents();
	}

	// Singleton
	public static AppointmentsPanel getInstance(Controller ctrl, String dni_patient, UserRole role) {
		if (instance == null)
			instance = new AppointmentsPanel(ctrl, dni_patient, role);
		instance.open();

		return instance;
	}

	public static void setNull() {
		instance = null;
	}

	private void open() {
		try {
			tableModel.open();
			calendarPanel1.open(tableModel.getAppointments());
		} catch (Exception e) {
			JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), e.getMessage(), "", JOptionPane.ERROR_MESSAGE);

			if (Main.SHOW_EXCEPTIONS_TRACE)
				e.printStackTrace();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings({ "unchecked", "serial" })
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel7 = new javax.swing.JLabel();
		rightPanel = new javax.swing.JPanel();
		calendarPanel1 = new viewer.misc.CalendarPanel();
		centerPanel = new javax.swing.JPanel();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		btnCancel = new misc.RSButtonMetro();

		jLabel7.setText("jLabel7");

		setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
		setLayout(new java.awt.BorderLayout());

		rightPanel.setPreferredSize(new java.awt.Dimension(300, 527));

		calendarPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
		calendarPanel1.setMinimumSize(new java.awt.Dimension(600, 150));
		calendarPanel1.setPreferredSize(new java.awt.Dimension(300, 350));
		rightPanel.add(calendarPanel1);

		add(rightPanel, java.awt.BorderLayout.LINE_END);

		centerPanel.setLayout(new java.awt.BorderLayout());

		tableModel = new AppointmentsTableModel(dni, ctrl, role);
		jTable1 = new javax.swing.JTable(tableModel);
		jScrollPane2.setViewportView(jTable1);

		centerPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);
		centerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(Color.BLACK,5), "My Appointments",
				javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

		add(centerPanel, java.awt.BorderLayout.CENTER);

		btnCancel.setText("Cancel appointment");
		btnCancel.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					int row = jTable1.getSelectedRow();
					Appointment p = tableModel.getAppointment(row);
					new CancelAppointmentPanel(dni, ctrl, role, p);
					tableModel.open();
					calendarPanel1.open(tableModel.getAppointments());
				} catch(SQLException e1) {
					JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(AppointmentsPanel.this), e1.getMessage(), "", JOptionPane.ERROR_MESSAGE);

					if (Main.SHOW_EXCEPTIONS_TRACE)
						e1.printStackTrace();
				} catch(ArrayIndexOutOfBoundsException e1) {
					JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(AppointmentsPanel.this), "You have to select an appointment first", "", JOptionPane.ERROR_MESSAGE);
				}
			}

		});
		btnCancel.setColorHover(new java.awt.Color(138, 202, 234));
		btnCancel.setColorNormal(new java.awt.Color(8, 72, 135));
		btnCancel.setColorPressed(new java.awt.Color(8, 72, 135));
		btnCancel.setColorTextHover(new java.awt.Color(51, 51, 51));
		btnCancel.setColorTextNormal(new java.awt.Color(242, 242, 242));
		btnCancel.setColorTextPressed(new java.awt.Color(242, 242, 242));
		btnCancel.setFocusPainted(false);
		btnCancel.setRolloverEnabled(false);

		southPanel = new JPanel();
		southPanel.add(btnCancel);
		centerPanel.add(southPanel, java.awt.BorderLayout.SOUTH);

	}// </editor-fold>


	// Variables declaration - do not modify
	private viewer.misc.CalendarPanel calendarPanel1;
	private javax.swing.JPanel centerPanel;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTable jTable1;
	private AppointmentsTableModel tableModel;
	private javax.swing.JPanel rightPanel;
	// End of variables declaration




}
